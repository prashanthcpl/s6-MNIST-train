name: Model Architecture Check

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check model architecture
      run: |
        python -c "
        import torch
        import sys
        sys.path.append('.')
        from model import Net
        
        def check_architecture():
            model = Net()
            
            # Check parameter count
            total_params = sum(p.numel() for p in model.parameters())
            assert total_params < 20000, f'Model has {total_params} parameters, should be less than 20000'
            
            # Check for batch normalization
            has_bn = any(isinstance(m, torch.nn.BatchNorm2d) for m in model.modules())
            assert has_bn, 'Model should include BatchNormalization'
            
            # Check for dropout
            has_dropout = any(isinstance(m, torch.nn.Dropout2d) for m in model.modules())
            assert has_dropout, 'Model should include Dropout'
            
            # Check for GAP and no FC
            has_gap = any(isinstance(m, torch.nn.AvgPool2d) for m in model.modules())
            has_fc = any(isinstance(m, torch.nn.Linear) for m in model.modules())
            assert has_gap, 'Model should use Global Average Pooling'
            assert not has_fc, 'Model should not use Fully Connected layers'
            
            print('âœ“ Model architecture requirements met')
            print(f'Total parameters: {total_params}')
        
        check_architecture()
        "
